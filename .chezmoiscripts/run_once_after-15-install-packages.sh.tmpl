#!/usr/bin/env bash

set -eufo pipefail

echo "=== DEBUG: INSTALLING PACKAGES (step 4 of 4) ==="

# Ensure mise is in PATH
export PATH="$HOME/.local/bin:$PATH"

# Debug: Show what's available
echo "DEBUG: mise available: $(command -v mise || echo 'NO')"
echo "DEBUG: uv available: $(command -v uv || echo 'NO')"

# Try to update mise if available, but don't fail if it's not
if command -v mise >/dev/null 2>&1; then
    mise self-update >/dev/null 2>&1 || true && echo "~ mise has been updated"
else
    echo "~ mise not found, skipping mise update"
fi

echo "~ languages (installations)"

# TODO: Move some of this into Chezmoi templates for readability
{{ range sortAlpha (keys .languages) -}}
  {{ $version := get $.languages . }}
  {{- if eq (kindOf $version) "map" }}
    {{ $version = get $version $.langenv }}
  {{ end -}}
  {{ if ne (kindOf $version) "invalid" }}
    # You can skip a language by setting it to null for an environment
    # which is parsed internally as "invalid" weirdly
    # I use this to cut down the install time by skipping languages
    # I only use at home and vice versa
    if command -v mise >/dev/null 2>&1; then
      mise install {{ . }}@{{ $version }} >/dev/null 2>&1 || true && echo "~~ {{ . }} {{ $version }} is installed"
      mise use {{ . }}@{{ $version }} --global >/dev/null 2>&1 || true
    else
      echo "~~ {{ . }} {{ $version }} skipped (mise not available)"
    fi
  {{ end -}}
{{ end -}}

# -- Globally installed tools -- #

{{ range sortAlpha (keys .tools) -}}
  echo "~~ {{ . }} tools"
  {{ $toolMap := (get $.tools .) }}
  {{ $installer := $toolMap.installer }}
  {{ $tools := $toolMap.global }}
  {{ range sortAlpha $tools -}}
    {{ $installer }} {{ . }} >/dev/null 2>&1 || true && echo "~~~ {{ . }} is installed"
  {{ end -}}
{{ end -}}

# -- Globally installed packages -- #

{{ range sortAlpha (keys .libraries) -}}
  echo "~~ {{ . }} libraries"
  {{ $langLibMap := (get $.libraries .) }}
  {{ $installer := $langLibMap.installer }}
  {{ $libs := $langLibMap.global }}
  {{/*
  {{ $envLibs := get $langLibMap $.langenv }}
  {{- if $envLibs }}
    {{ $libs = concat $libs $envLibs }}
  {{ end -}}
  */}}
  {{ range sortAlpha $libs -}}
    {{ $installer }} {{ . }} >/dev/null 2>&1 || true && echo "~~~ {{ . }} is installed"
  {{ end -}}
{{ end -}}
